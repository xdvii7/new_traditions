types = {
	type[species_class] = {
		path = "game/common/species_classes"
		subtype[playable] = {
			## cardinality = 0..1
			playable = {
				## cardinality = 0..1
				always = yes
			}
			archetype = <species_archetype>
		}
		localisation = {
			subtype[playable] = {
				## required
				Name = "$"
				## required
				Description = "$_desc"
				## required
				Plural = "$_plural"
				## required
				Insult = "$_insult_01"
				## required
				"Insult plural" = "$_insult_plural_01"
				## required
				Compliment = "$_compliment_01"
				## required
				"Compliment plural" = "$_compliment_plural_01"
				## required
				Spawn = "$_spawn"
				## required
				"Spawn plural" = "$_spawn_plural"
				## required
				"Sound 01" = "$_sound_01"
				## required
				"Sound 02" = "$_sound_02"
				## required
				"Sound 03" = "$_sound_03"
				## required
				"Sound 04" = "$_sound_04"
				## required
				"Sound 05" = "$_sound_05"
				## required
				Organ = "$_organ"
				## required
				Organ plural = "$_organ_plural"
				## required
				Mouth = "$_mouth"
				## required
				Hand = "$_hand"
				## required
				Hand plural = "$_hand_plural"
				## required
				Ear = "$_ear"
				## required
				Ear plural = "$_ear_plural"
				## required
				Tooth = "$_tooth"
				## required
				Tooth plural = "$_tooth_plural"
				## required
				Fossil = "$_fossil"
				## required
				Fossil plural = "$_fossil_plural"
				## required
				Remnant = "$_remnant"
				## required
				Remnant plural = "$_remnant_plural"
			}
		}
	}
	type[species_archetype] = {
		path = "game/common/species_archetypes"
	}
	type[citizenship_type] = {
		path = "game/common/species_rights/citizenship_types"
		localisation = {
			## required
			Name = "$"
			## required
			Tooltip = "$_tooltip"
			## required
			"Delayed tooltip" = "$_tooltip_delayed"
		}
	}
	type[colonization_control] = {
		path = "game/common/species_rights/colonization_controls"
		localisation = {
			## required
			Name = "$"
			## required
			Tooltip = "$_tooltip"
			## required
			"Delayed tooltip" = "$_tooltip_delayed"
		}
	}
	type[living_standard] = {
		path = "game/common/species_rights/living_standards"
		localisation = {
			## required
			Name = "$"
			## required
			Tooltip = "$_tooltip"
			## required
			"Delayed tooltip" = "$_tooltip_delayed"
		}
	}
	type[migration_control] = {
		path = "game/common/species_rights/migration_controls"
		localisation = {
			## required
			Name = "$"
			## required
			Tooltip = "$_tooltip"
			## required
			"Delayed tooltip" = "$_tooltip_delayed"
		}
	}
	type[military_service_type] = {
		path = "game/common/species_rights/military_service_types"
		localisation = {
			## required
			Name = "$"
			## required
			Tooltip = "$_tooltip"
			## required
			"Delayed tooltip" = "$_tooltip_delayed"
		}
	}
	type[population_control] = {
		path = "game/common/species_rights/population_controls"
		localisation = {
			## required
			Name = "$"
			## required
			Tooltip = "$_tooltip"
			## required
			"Delayed tooltip" = "$_tooltip_delayed"
		}
	}
	type[purge_type] = {
		path = "game/common/species_rights/purge_types"
		localisation = {
			## required
			Name = "$"
			## required
			Tooltip = "$_tooltip"
			## required
			"Delayed tooltip" = "$_tooltip_delayed"
		}
	}
	type[slavery_type] = {
		path = "game/common/species_rights/slavery_types"
		localisation = {
			## required
			Name = "$"
			## required
			Tooltip = "$_tooltip"
			## required
			"Delayed tooltip" = "$_tooltip_delayed"
		}
	}
	type[subspecies_integration_type] = {
		path = "game/common/species_rights/subspecies_integration_types"
		localisation = {
			## required
			Name = "$"
			## required
			Tooltip = "$_tooltip"
			## required
			"Delayed tooltip" = "$_tooltip_delayed"
		}
	}
}

#make sure trait points cannot be above max, ideally
species_archetype = {
	## cardinality = 0..1
	species_trait_points = int
	## cardinality = 0..1
	species_max_traits = int
	## cardinality = 0..1
	inherit_traits_from = {
		<species_archetype>
	}
	## cardinality = 0..1
	inherit_trait_points_from = <species_archetype>
	## cardinality = 0..1
	robotic = bool
	## cardinality = 0..1
	uses_modifiers = bool
	
	## cardinality = 0..1
	resources = {
		category = <economic_category>
		alias_name[economic_template] = alias_match_left[economic_template]
	}
	
}

#TODO Document
species_class = {
	## cardinality = 0..1
	archetype = <species_archetype>
	## cardinality = 0..1
	generate_shipset = bool
	## cardinality = 0..1
	## replace_scope = { this = pop_group root = pop_group }
	modifier = {
		## cardinality = 0..1
		alias_name[modifier] = alias_match_left[modifier]
	}
	## cardinality = 0..1
	playable = {
		alias_name[trigger] = alias_match_left[trigger]
	}
	## cardinality = 0..1
	randomized = bool
	## cardinality = 0..1
	randomized = {
		alias_name[trigger] = alias_match_left[trigger]
	}
	## cardinality = 0..1
	uplifted_into = <species_class>
	## cardinality = 0..1
	uplifted_portraits = {
		## cardinality = 0..inf
		<portrait>
		## cardinality = 0..inf
		<portrait_group>
	}
	
	## cardinality = 0..1
	## replace_scope = { root = country this = country }
	possible = {
		## cardinality = 0..1
		authority = {
			alias_name[government_trigger] = alias_match_left[government_trigger]
		}
		## cardinality = 0..1
		always = bool
		## cardinality = 0..1
		text = localisation
		## cardinality = 0..1
		alias_name[government_trigger] = alias_match_left[government_trigger]
	}
	
	## cardinality = 0..1
	## replace_scope = { root = country this = country }
	possible_secondary = {
		## cardinality = 0..1
		authority = {
			alias_name[government_trigger] = alias_match_left[government_trigger]
		}
		## cardinality = 0..1
		always = bool
		## cardinality = 0..1
		text = localisation
		## cardinality = 0..1
		alias_name[government_trigger] = alias_match_left[government_trigger]
	}
	## cardinality = 0..1
	portraits = {
		## cardinality = 0..inf
		<portrait>
		## cardinality = 0..inf
		<portrait_group>
	}
	## cardinality = 0..inf
	custom_portraits = {
		## replace_scope = { root = no_scope this = no_scope }
		## cardinality = 0..1
		randomized = {
			## cardinality = 0..1
			alias_name[trigger] = alias_match_left[trigger]
		}
		## replace_scope = { root = no_scope this = no_scope }
		## cardinality = 0..1
		playable = {
			## cardinality = 0..1
			alias_name[trigger] = alias_match_left[trigger]
		}
		portraits = {
			## cardinality = 0..inf
			<portrait>
			## cardinality = 0..inf
			<portrait_group>
		}
	}
	## cardinality = 0..1
	non_randomized_portraits = {
		## cardinality = 0..inf
		<portrait>
		## cardinality = 0..inf
		<portrait_group>
	}
	## cardinality = 0..inf
	non_pre_ftl_portraits = {
		## cardinality = 0..inf
		<portrait>
		## cardinality = 0..inf
		<portrait_group>
	}
	## cardinality = 0..1
	gender = bool
	## cardinality = 0..1
	graphical_culture = <graphical_culture>
	## cardinality = 0..1
	move_pop_sound_effect = scalar #should be connected to sounds under game/sound
	## cardinality = 0..1
	use_climate_preference = bool
	## cardinality = 0..1
	portrait_modding = bool
	## cardinality = 0..1
	leader_age_min = int
	## cardinality = 0..1
	leader_age_max = int

	## cardinality = 0..1
	resources = {
	}
	## cardinality = 0..1
	resources = {
		category = <economic_category>
		alias_name[economic_template] = alias_match_left[economic_template]
	}

	## cardinality = 0..1
	trait = <trait>
	
	## cardinality = 0..1
	random_weight = {
		base = int
	}
	
	## cardinality = 0..1
	ethics_to_prefer = {
		<ethos>
	}
	
	## cardinality = 0..1
	preferred_ethics_weight = {
		base = float
	}
}

citizenship_type = {
	## cardinality = 0..inf
	in_breach_of = {
		## cardinality = 0..inf
		{
			## cardinality = 0..1
			## replace_scope = { this = country root = country }
			trigger = {
				alias_name[trigger] = alias_match_left[trigger]
			}
			key = <resolution>
		}
	}

	## cardinality = 0..1
	is_full_citizenship = yes
	## cardinality = 0..1
	is_assimilation = yes
	## cardinality = 0..1
	is_slavery = yes
	## cardinality = 0..1
	is_robot_servant = yes
	## cardinality = 0..1
	is_purge = yes
	## cardinality = 0..1
	new_pop_weight = float

	## cardinality = 0..1
	## replace_scope = { this = army root = army }
	modifier = {
		alias_name[modifier] = alias_match_left[modifier]
	}

	## cardinality = 0..1
	## replace_scope = { this = pop_group root = pop_group }
	pop_group_modifier = {
		alias_name[modifier] = alias_match_left[modifier]
		## cardinality = 0..1
		custom_tooltip = localisation
	}

	## cardinality = 0..1
	## replace_scope = { this = pop_group root = pop_group }
	free_pop_modifier = {
		alias_name[modifier] = alias_match_left[modifier]
	}

	## cardinality = 0..1
	### tooltip that appears on each Pop with this species right
	pop_tooltip = localisation
	## cardinality = 0..1
	### from of the sprite "" that is overlaid on each Pop's icon
	pop_status_frame = int

	## cardinality = 0..1
	## replace_scope = { this = species root = species from = country }
	potential = {
		alias_name[trigger] = alias_match_left[trigger]
	}

	## cardinality = 0..1
	## replace_scope = { this = species root = species from = country }
	allow = {
		alias_name[trigger] = alias_match_left[trigger]
	}

	## replace_scope = { this = species root = species from = country }
	ai_will_do = {
		factor = float
		alias_name[modifier_rule] = alias_match_left[modifier_rule]
	}

	## cardinality = 0..1
	alias_name[triggered_pop_modifier] = alias_match_left[triggered_pop_modifier]
}

colonization_control = {
	## cardinality = 0..inf
	in_breach_of = {
		## cardinality = 0..inf
		{
			## cardinality = 0..1
			## replace_scope = { this = country root = country }
			trigger = {
				alias_name[trigger] = alias_match_left[trigger]
			}
			key = <resolution>
		}
	}

	## cardinality = 0..1
	can_colonize = no

	## cardinality = 0..1
	## replace_scope = { this = army root = army }
	modifier = {
		alias_name[modifier] = alias_match_left[modifier]
	}

	## cardinality = 0..1
	## replace_scope = { this = pop_group root = pop_group }
	pop_group_modifier = {
		alias_name[modifier] = alias_match_left[modifier]
		## cardinality = 0..1
		custom_tooltip = localisation
	}

	## cardinality = 0..1
	## replace_scope = { this = pop_group root = pop_group }
	free_pop_modifier = {
		alias_name[modifier] = alias_match_left[modifier]
	}

	## cardinality = 0..1
	### tooltip that appears on each Pop with this species right
	pop_tooltip = localisation
	## cardinality = 0..1
	### from of the sprite "" that is overlaid on each Pop's icon
	pop_status_frame = int

	## cardinality = 0..1
	## replace_scope = { this = species root = species from = country }
	potential = {
		alias_name[trigger] = alias_match_left[trigger]
	}

	## cardinality = 0..1
	## replace_scope = { this = species root = species from = country }
	allow = {
		alias_name[trigger] = alias_match_left[trigger]
	}

	## replace_scope = { this = species root = species from = country }
	ai_will_do = {
		factor = float
		alias_name[modifier_rule] = alias_match_left[modifier_rule]
	}

	## cardinality = 0..1
	alias_name[triggered_pop_modifier] = alias_match_left[triggered_pop_modifier]
}

living_standard = {
	## cardinality = 0..inf
	in_breach_of = {
		## cardinality = 0..inf
		{
			## cardinality = 0..1
			## replace_scope = { this = country root = country }
			trigger = {
				alias_name[trigger] = alias_match_left[trigger]
			}
			key = <resolution>
		}
	}

	## cardinality = 0..1
	## replace_scope = { this = army root = army }
	modifier = {
		alias_name[modifier] = alias_match_left[modifier]
	}

	## cardinality = 0..1
	## replace_scope = { this = pop_group root = pop_group }
	pop_group_modifier = {
		alias_name[modifier] = alias_match_left[modifier]
		## cardinality = 0..1
		custom_tooltip = localisation
	}

	## cardinality = 0..inf
	## replace_scope = { this = pop_group root = pop_group }
	triggered_pop_group_modifier = {
		potential = {
			alias_name[trigger] = alias_match_left[trigger]
		}
		alias_name[modifier] = alias_match_left[modifier]
		## cardinality = 0..1
		custom_tooltip = localisation
	}

	## cardinality = 0..1
	## replace_scope = { this = pop_group root = pop_group }
	free_pop_modifier = {
		alias_name[modifier] = alias_match_left[modifier]
	}

	## cardinality = 0..1
	### tooltip that appears on each Pop with this species right
	pop_tooltip = localisation
	## cardinality = 0..1
	### from of the sprite "" that is overlaid on each Pop's icon
	pop_status_frame = int

	## cardinality = 0..1
	## replace_scope = { this = species root = species from = country }
	potential = {
		alias_name[trigger] = alias_match_left[trigger]
	}

	## cardinality = 0..1
	## replace_scope = { this = species root = species from = country }
	allow = {
		alias_name[trigger] = alias_match_left[trigger]
	}

	## replace_scope = { this = species root = species from = country }
	ai_will_do = {
		factor = float
		alias_name[modifier_rule] = alias_match_left[modifier_rule]
	}

	## cardinality = 0..1
	alias_name[triggered_pop_modifier] = alias_match_left[triggered_pop_modifier]
}

migration_control = {
	## cardinality = 0..inf
	in_breach_of = {
		## cardinality = 0..inf
		{
			## cardinality = 0..1
			## replace_scope = { this = country root = country }
			trigger = {
				alias_name[trigger] = alias_match_left[trigger]
			}
			key = <resolution>
		}
	}

	## cardinality = 0..1
	can_migrate = no

	## cardinality = 0..1
	## replace_scope = { this = army root = army }
	modifier = {
		alias_name[modifier] = alias_match_left[modifier]
	}

	## cardinality = 0..1
	## replace_scope = { this = pop_group root = pop_group }
	pop_group_modifier = {
		alias_name[modifier] = alias_match_left[modifier]
		## cardinality = 0..1
		custom_tooltip = localisation
	}

	## cardinality = 0..1
	## replace_scope = { this = pop_group root = pop_group }
	free_pop_modifier = {
		alias_name[modifier] = alias_match_left[modifier]
	}

	## cardinality = 0..1
	### tooltip that appears on each Pop with this species right
	pop_tooltip = localisation
	## cardinality = 0..1
	### from of the sprite "" that is overlaid on each Pop's icon
	pop_status_frame = int

	## cardinality = 0..1
	## replace_scope = { this = species root = species from = country }
	potential = {
		alias_name[trigger] = alias_match_left[trigger]
	}

	## cardinality = 0..1
	## replace_scope = { this = species root = species from = country }
	allow = {
		alias_name[trigger] = alias_match_left[trigger]
	}

	## replace_scope = { this = species root = species from = country }
	ai_will_do = {
		factor = float
		alias_name[modifier_rule] = alias_match_left[modifier_rule]
	}

	## cardinality = 0..1
	alias_name[triggered_pop_modifier] = alias_match_left[triggered_pop_modifier]
}

military_service_type = {
	## cardinality = 0..inf
	in_breach_of = {
		## cardinality = 0..inf
		{
			## cardinality = 0..1
			## replace_scope = { this = country root = country }
			trigger = {
				alias_name[trigger] = alias_match_left[trigger]
			}
			key = <resolution>
		}
	}

	## cardinality = 0..1
	## replace_scope = { this = army root = army }
	modifier = {
		alias_name[modifier] = alias_match_left[modifier]
	}

	## cardinality = 0..1
	## replace_scope = { this = pop_group root = pop_group }
	pop_group_modifier = {
		alias_name[modifier] = alias_match_left[modifier]
		## cardinality = 0..1
		custom_tooltip = localisation
	}

	## cardinality = 0..1
	## replace_scope = { this = pop_group root = pop_group }
	free_pop_modifier = {
		alias_name[modifier] = alias_match_left[modifier]
	}

	## cardinality = 0..1
	### tooltip that appears on each Pop with this species right
	pop_tooltip = localisation
	## cardinality = 0..1
	### from of the sprite "" that is overlaid on each Pop's icon
	pop_status_frame = int

	## cardinality = 0..1
	## replace_scope = { this = species root = species from = country }
	potential = {
		alias_name[trigger] = alias_match_left[trigger]
	}

	## cardinality = 0..1
	## replace_scope = { this = species root = species from = country }
	allow = {
		alias_name[trigger] = alias_match_left[trigger]
	}

	## replace_scope = { this = species root = species from = country }
	ai_will_do = {
		factor = float
		alias_name[modifier_rule] = alias_match_left[modifier_rule]
	}

	## cardinality = 0..1
	alias_name[triggered_pop_modifier] = alias_match_left[triggered_pop_modifier]
}

population_control = {
	## cardinality = 0..inf
	in_breach_of = {
		## cardinality = 0..inf
		{
			## cardinality = 0..1
			## replace_scope = { this = country root = country }
			trigger = {
				alias_name[trigger] = alias_match_left[trigger]
			}
			key = <resolution>
		}
	}

	## cardinality = 0..1
	can_reproduce = no

	## cardinality = 0..1
	## replace_scope = { this = army root = army }
	modifier = {
		alias_name[modifier] = alias_match_left[modifier]
	}

	## cardinality = 0..1
	## replace_scope = { this = pop_group root = pop_group }
	pop_group_modifier = {
		alias_name[modifier] = alias_match_left[modifier]
		## cardinality = 0..1
		custom_tooltip = localisation
	}

	## cardinality = 0..1
	## replace_scope = { this = pop_group root = pop_group }
	free_pop_modifier = {
		alias_name[modifier] = alias_match_left[modifier]
	}

	## cardinality = 0..1
	### tooltip that appears on each Pop with this species right
	pop_tooltip = localisation
	## cardinality = 0..1
	### from of the sprite "" that is overlaid on each Pop's icon
	pop_status_frame = int

	## cardinality = 0..1
	## replace_scope = { this = species root = species from = country }
	potential = {
		alias_name[trigger] = alias_match_left[trigger]
	}

	## cardinality = 0..1
	## replace_scope = { this = species root = species from = country }
	allow = {
		alias_name[trigger] = alias_match_left[trigger]
	}

	## replace_scope = { this = species root = species from = country }
	ai_will_do = {
		factor = float
		alias_name[modifier_rule] = alias_match_left[modifier_rule]
	}

	## cardinality = 0..1
	alias_name[triggered_pop_modifier] = alias_match_left[triggered_pop_modifier]
}

purge_type = {
	## cardinality = 0..inf
	in_breach_of = {
		## cardinality = 0..inf
		{
			## cardinality = 0..1
			## replace_scope = { this = country root = country }
			trigger = {
				alias_name[trigger] = alias_match_left[trigger]
			}
			key = <resolution>
		}
	}
	
	pop_escape_chance = float
	### Divide by 100 for monthy reduction, overrides BASE_POP_DECLINE
	pop_decline_rate = value_field

	## cardinality = 0..1
	## replace_scope = { this = army root = army }
	modifier = {
		alias_name[modifier] = alias_match_left[modifier]
	}

	## cardinality = 0..1
	## replace_scope = { this = pop_group root = pop_group }
	pop_group_modifier = {
		alias_name[modifier] = alias_match_left[modifier]
		## cardinality = 0..1
		custom_tooltip = localisation
	}

	## cardinality = 0..1
	## replace_scope = { this = pop_group root = pop_group }
	free_pop_modifier = {
		alias_name[modifier] = alias_match_left[modifier]
	}

	## cardinality = 0..1
	### tooltip that appears on each Pop with this species right
	pop_tooltip = localisation
	## cardinality = 0..1
	### from of the sprite "" that is overlaid on each Pop's icon
	pop_status_frame = int

	## cardinality = 0..1
	## replace_scope = { this = species root = species from = country }
	potential = {
		alias_name[trigger] = alias_match_left[trigger]
	}

	## cardinality = 0..1
	## replace_scope = { this = species root = species from = country }
	allow = {
		alias_name[trigger] = alias_match_left[trigger]
	}
	
	## cardinality = 0..1
	## replace_scope = { this = species root = species from = country }
	hidden = {
		alias_name[trigger] = alias_match_left[trigger]
	}

	## cardinality = 0..1
	## replace_scope = { this = species root = species from = country }
	ai_will_do = {
		factor = float
		alias_name[modifier_rule] = alias_match_left[modifier_rule]
	}

	## cardinality = 0..1
	alias_name[triggered_pop_modifier] = alias_match_left[triggered_pop_modifier]
}

slavery_type = {
	## cardinality = 0..inf
	in_breach_of = {
		## cardinality = 0..inf
		{
			## cardinality = 0..1
			## replace_scope = { this = country root = country }
			trigger = {
				alias_name[trigger] = alias_match_left[trigger]
			}
			key = <resolution>
		}
	}

	## cardinality = 0..1
	### otherwise, AI will not colonise with enslaved species
	ai_can_colonize = yes
	
	## cardinality = 0..1
	## replace_scope = { this = army root = army }
	modifier = {
		alias_name[modifier] = alias_match_left[modifier]
	}

	## cardinality = 0..1
	## replace_scope = { this = pop_group root = pop_group }
	pop_group_modifier = {
		alias_name[modifier] = alias_match_left[modifier]
		## cardinality = 0..1
		custom_tooltip = localisation
	}

	## cardinality = 0..1
	## replace_scope = { this = pop_group root = pop_group }
	free_pop_modifier = {
		alias_name[modifier] = alias_match_left[modifier]
	}

	## cardinality = 0..1
	### tooltip that appears on each Pop with this species right
	pop_tooltip = localisation
	## cardinality = 0..1
	### from of the sprite "" that is overlaid on each Pop's icon
	pop_status_frame = int

	## cardinality = 0..1
	## replace_scope = { this = species root = species from = country }
	potential = {
		alias_name[trigger] = alias_match_left[trigger]
	}

	## cardinality = 0..1
	## replace_scope = { this = species root = species from = country }
	allow = {
		alias_name[trigger] = alias_match_left[trigger]
	}

	## replace_scope = { this = species root = species from = country }
	ai_will_do = {
		factor = float
		alias_name[modifier_rule] = alias_match_left[modifier_rule]
	}

	## cardinality = 0..1
	alias_name[triggered_pop_modifier] = alias_match_left[triggered_pop_modifier]
}

subspecies_integration_type = {
	integration = bool
	## cardinality = 0..1
	allow = {
		alias_name[trigger] = alias_match_left[trigger]
	}
	
	ai_will_do = {
		factor = int
	}
}

enums = {
	enum[species_rights_type] = {
		citizenship
		military_service
		slavery
		purge
		living_standard
		migration_control
		population_control
		colonization_control
		none
	}
	enum[species_category_type] = {
		normal
		cyborg
		robotic
		psionic
		advanced_genetic
		overtuned
		malleable
		mutation
	}
}
