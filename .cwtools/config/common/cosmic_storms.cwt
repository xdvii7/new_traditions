
types = {
	type[storm_type] = {
		path = "game/common/storm_types"
	}
	type[cosmic_storm_mission] = {
		path = "game/common/missions"
	}
}

storm_type = {
	## cardinality = 0..1
	affect_hp_regen = yes
	## cardinality = 0..1
	affect_armor_regen = yes
	## cardinality = 0..1
	affect_shield_regen = yes
	## cardinality = 0..1
	occlude_system = yes
	
	## cardinality = 0..1
	spawn_weight = float
	## cardinality = 0..1
	## replace_scope = { this = country root = country }
	spawn_weight = {
		base = float
		modifier = {
			## cardinality = 0..1
			set = int
			## cardinality = 0..1
			factor = int
			alias_name[trigger] = alias_match_left[trigger]
		}
	}

	description = localisation
	
	## cardinality = 0..1
	custom_tooltip = localisation

	## cardinality = 0..inf
	alias_name[triggered_planet_modifier_planet] = alias_match_left[triggered_planet_modifier_planet]
	## cardinality = 0..inf
	alias_name[triggered_fleet_modifier_fleet] = alias_match_left[triggered_fleet_modifier_fleet]
	## cardinality = 0..inf
	alias_name[triggered_ship_modifier] = alias_match_left[triggered_ship_modifier]
	## cardinality = 0..inf
	alias_name[triggered_system_modifier_starbase] = alias_match_left[triggered_system_modifier_starbase]

	## replace_scope = { this = cosmic_storm root = cosmic_storm }
	on_start = {
		## cardinality = 0..inf	
		alias_name[effect] = alias_match_left[effect]
	}
	
	## replace_scope = { this = cosmic_storm root = cosmic_storm }	
	on_moved = {
		## cardinality = 0..inf	
		alias_name[effect] = alias_match_left[effect]
	}

	## replace_scope = { this = cosmic_storm root = cosmic_storm }	
	on_finished = {
		## cardinality = 0..inf	
		alias_name[effect] = alias_match_left[effect]
	}

	cosmic_storm_texture_path = filepath
	cosmic_storm_texture_color_path = filepath
	cosmic_storm_event_sprite = <sprite>
	icon = <sprite>

	cosmic_storm_texture_lightning_paths = {
		## cardinality = 0..inf
		filepath
	}

	cosmic_storm_galaxy_lightning_time = float
	cosmic_storm_galaxy_max_opacity = float
	
	## replace_scope = { this = country root = country }	
	## cardinality = 0..inf	
	show_notification = {
		alias_name[trigger] = alias_match_left[trigger]
	}
	
	
	# inline script
	
	## cardinality = 0..1	
	storm_min_radius = {
	   alias_name[modifier_rule] = alias_match_left[modifier_rule]
	}
	
	## cardinality = 0..1
	storm_max_radius = { 
		alias_name[modifier_rule] = alias_match_left[modifier_rule]
	}

	## cardinality = 0..1
	storm_min_steps = {
		alias_name[modifier_rule] = alias_match_left[modifier_rule]
	}

	## cardinality = 0..1
	storm_max_steps = {
		alias_name[modifier_rule] = alias_match_left[modifier_rule]
	}

	## cardinality = 0..1
	storm_speed = {
		alias_name[modifier_rule] = alias_match_left[modifier_rule]
	}

	## cardinality = 0..1
	storm_activation_period_in_months = {
		alias_name[modifier_rule] = alias_match_left[modifier_rule]
	}

	## cardinality = 0..1
	storm_monthly_added_devastation = {
		alias_name[modifier_rule] = alias_match_left[modifier_rule]
	}

	
}

cosmic_storm_mission = {

	desc = localisation
	event_chain = <event_chain>
	icon = filepath
	picture = <sprite>
	
	## cardinality = 0..1
	location = yes

	abort_trigger = { 
		## cardinality = 0..inf
		alias_name[trigger] = alias_match_left[trigger]
	}
	
	## cardinality = 0..inf
	counter = {
		## cardinality = 0..inf
		localisation = {
			## cardinality = 0..1
			max = int
		}
	}
	
	## cardinality = 0..1
	on_daily = {
		## cardinality = 0..inf
		alias_name[effect] = alias_match_left[effect]
	}
	
	## cardinality = 0..1
	on_monthly = {
		## cardinality = 0..inf
		alias_name[effect] = alias_match_left[effect]
	}
	
	## cardinality = 0..1
	on_stop = {
		## cardinality = 0..inf
		alias_name[effect] = alias_match_left[effect]
	}
	
	## cardinality = 0..1
	on_success = { 
		## cardinality = 0..inf
		alias_name[effect] = alias_match_left[effect]
	}
}

enums = {
	complex_enum[event_chain_counter] = {
		path = "game/common/missions"
		name = {
			counter = {
				enum_name = {

				}
			}
		}
	}
}
